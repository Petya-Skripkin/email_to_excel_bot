import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from config import BOT_TOKEN, EXCEL_FILE
from email_reader import fetch_emails
import logging

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="–°–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É")]],
    resize_keyboard=True
)


# –ö–æ–º–∞–Ω–¥–∞ /start –∏ /download
@dp.message(Command(commands=["start", "download"]))
async def send_excel(message: types.Message):
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å –ø–∏—Å—å–º–∞–º–∏", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É"
@dp.message(lambda message: message.text == "–°–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É")
async def send_file(message: types.Message):
    with open(EXCEL_FILE, "rb") as file:
        await bot.send_document(message.chat.id, file)

async def main():
    logging.basicConfig(level=logging.INFO)
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")  # –î–æ–±–∞–≤–∏–ª–∏ –≤—ã–≤–æ–¥
    fetch_emails()  # –ß–∏—Ç–∞–µ–º –ø–∏—Å—å–º–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞
    await bot.delete_webhook(drop_pending_updates=True)
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")  # –î–æ–±–∞–≤–∏–ª–∏ –≤—ã–≤–æ–¥
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
